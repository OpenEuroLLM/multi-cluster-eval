name: Build and push Docker image

on:
  push:
    paths:
      - 'docker/*.Dockerfile'
      - '.github/workflows/build-and-push-docker.yml'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Optional image tag (e.g. 25.06). Defaults to latest + commit SHA.'
        required: false
        type: string

jobs:
  build-push:
    name: Build & Push to GHCR
    strategy:
      matrix:
        include:
          - dockerfile: docker/jureca.Dockerfile
            suffix: -jureca
          - dockerfile: docker/leonardo.Dockerfile
            suffix: -leonardo
          - dockerfile: docker/lumi_slim.Dockerfile
            suffix: -lumi
    runs-on: ubuntu-latest
    permissions:
      packages: write  
      contents: read

    steps:
      - name: Delete huge unnecessary tools folder
        run: rm -rf /opt/hostedtoolcache

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Show disk usage before cleanup
        run: |
          echo "=== df -h (before) ===" && df -h
          echo "=== Top-level disk usage under /opt ===" && du -h -d1 /opt | sort -hr | head -n20

      - name: Free up disk space on runner
        run: |
          sudo rm -rf /usr/share/dotnet || true
          sudo rm -rf /usr/local/lib/android || true
          sudo rm -rf /opt/ghc || true
          sudo rm -rf /opt/hostedtoolcache || true
          sudo docker system prune -af || true

      - name: Extra cleanup for Lumi
        if: ${{ matrix.suffix == '-lumi' }}
        run: |
          # Remove heavy language runtimes / toolchains that are not required for the Docker build
          sudo rm -rf /usr/local/go /usr/local/julia* /usr/share/swift /usr/lib/jvm /usr/local/lib/node_modules || true

          # Purge additional unneeded APT packages (Java, Go, and common build toolchains)
          sudo apt-get remove -y '^openjdk-.*' '^jdk-.*' gcc g++ clang build-essential || true
          sudo apt-get remove -y '^ghc-8.*' || true
          sudo apt-get remove -y '^llvm-.*' || true
          sudo apt-get remove -y 'php.*' || true
          sudo apt-get remove -y azure-cli google-cloud-sdk hhvm google-chrome-stable firefox powershell mono-devel || true
          sudo apt-get remove -y '^dotnet-.*' || true
          # Final clean-up and reclaim space
          sudo docker system prune -af || true
          sudo apt-get autoremove -y || true
          sudo apt-get clean || true

          # Remove large, unnecessary SDKs and caches that apt may not handle
          sudo rm -rf /opt/microsoft /opt/az /opt/google /opt/pipx /opt/actionarchivecache /opt/runner-cache || true

          # Remove language/environment managers and SDKs installed under /usr/local that are not needed for Docker
          sudo rm -rf /usr/local/rustup /usr/local/cargo /usr/local/go /usr/local/julia* /usr/local/miniconda /usr/local/heroku /usr/local/conda* || true

          # Remove large cached resources and documentation
          sudo rm -rf /usr/share/dotnet /usr/share/miniconda /usr/share/gradle /usr/share/kotlinc /usr/share/scala /usr/lib/llvm-* || true

          # Strip documentation, manual pages and locales to reclaim additional space
          sudo rm -rf /usr/share/{man,doc,info,locale,zoneinfo}/* || true

          echo "=== df -h (after Lumi extra cleanup) ===" && df -h

      - name: Show disk usage after cleanup
        run: df -h

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          # Produce image name specific to the current matrix item
          images: ghcr.io/${{ github.repository_owner }}/eval_env${{ matrix.suffix }}
          # Tags produced by default:
          #  • latest (main branch) or branch name
          #  • sha-<short SHA>
          #  • any tag provided via workflow_dispatch input
          tags: |
            type=raw,latest
            type=sha
            type=raw,${{ github.event.inputs.tag }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }} 
          