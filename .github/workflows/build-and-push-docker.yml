name: Build and push Docker image

on:
  push:
    paths:
      - 'Dockerfile'
      - '.github/workflows/build-and-push-docker.yml'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Optional image tag (e.g. 25.06). Defaults to latest + commit SHA.'
        required: false
        type: string

jobs:
  build-push:
    name: Build & Push to GHCR
    runs-on: ubuntu-latest
    permissions:
      packages: write   # needed to push to ghcr.io
      contents: read

    steps:
      - name: Delete huge unnecessary tools folder
        run: rm -rf /opt/hostedtoolcache

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Show disk usage before cleanup
        run: |
          echo "=== df -h (before) ===" && df -h
          echo "=== Top-level disk usage under /opt ===" && du -h -d1 /opt | sort -hr | head -n20

      - name: Free up disk space on runner
        run: |
          sudo rm -rf /usr/share/dotnet || true
          sudo rm -rf /usr/local/lib/android || true
          sudo rm -rf /opt/ghc || true
          sudo rm -rf /opt/hostedtoolcache || true
          sudo docker system prune -af || true

      - name: Show disk usage after cleanup
        run: df -h

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/eval_env
          tags: |
            type=raw,latest
            type=sha
            type=raw,${{ github.event.inputs.tag }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # --------------------------------------------------------------------
      # Ensure the pushed image is public so Singularity pulls work without
      # credentials. We attempt both the org and user API endpoints; one will
      # succeed depending on where the package lives.
      # --------------------------------------------------------------------
      - name: Set GHCR package visibility to public
        env:
          OWNER: ${{ github.repository_owner }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          pkg="eval_env"
          echo "Setting visibility of $pkg to public for owner $OWNER"
          api_org="https://api.github.com/orgs/$OWNER/packages/container/$pkg"
          api_user="https://api.github.com/users/$OWNER/packages/container/$pkg"
          for url in "$api_org" "$api_user"; do
            status=$(curl -s -o /dev/null -w "%{http_code}" -X PATCH \
              -H "Authorization: Bearer $GH_TOKEN" \
              -H "Accept: application/vnd.github+json" \
              "$url" \
              -d '{"visibility":"public"}') || true
            if [ "$status" = "200" ]; then
              echo "Package made public via $url"; exit 0; fi
            if [ "$status" = "404" ]; then
              continue; fi
            echo "GitHub API returned $status for $url"; exit 1
          done
          echo "Package not found in org or user namespace"; exit 1 