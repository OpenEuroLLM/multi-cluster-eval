name: Build and push cluster images

on:
  push:
    paths:
      - 'docker/**.Dockerfile'
      - '.github/workflows/build-and-push-docker.yml'
  workflow_dispatch:
    inputs:
      cluster:
        description: 'Cluster to build (jureca|leonardo|lumi|all)'
        required: false
        type: string

jobs:
  build-push:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.cluster == '' || github.event_name != 'workflow_dispatch'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cluster: [jureca, leonardo, lumi]
    steps:
      - name: Skip if manual dispatch targets single cluster
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.cluster != 'all' && github.event.inputs.cluster != '' && github.event.inputs.cluster != matrix.cluster
        run: echo "Skipping ${{ matrix.cluster }} build per workflow_dispatch input" && exit 0

      - name: Checkout repository
        uses: actions/checkout@v4

      # Inspect and free disk space (runner has ~14 GB free; CUDA bases want more)
      - name: Show disk usage before cleanup
        run: |
          echo "=== df -h (before) ==="; df -h
          echo "=== /opt usage ==="; du -h -d1 /opt | sort -hr | head -n 20

      - name: Free up disk space on runner
        run: |
          sudo rm -rf /usr/share/dotnet \
                       /usr/local/lib/android \
                       /opt/ghc \
                       /opt/hostedtoolcache || true
          sudo docker system prune -af || true
          sudo apt-get remove -y '^ghc-8.*' || true
          sudo apt-get remove -y '^dotnet-.*' || true
          sudo apt-get remove -y '^llvm-.*' || true
          sudo apt-get remove -y 'php.*' || true
          sudo apt-get remove -y azure-cli google-cloud-sdk hhvm google-chrome-stable firefox powershell mono-devel || true
          sudo apt-get autoremove -y || true
          sudo apt-get clean || true

      - name: Show disk usage after cleanup
        run: df -h

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/eval_env-${{ matrix.cluster }}
          tags: |
            type=raw,latest
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/${{ matrix.cluster }}.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Make GHCR image public
        env:
          OWNER: ${{ github.repository_owner }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CLUSTER: ${{ matrix.cluster }}
        run: |
          set -e
          pkg="eval_env-${CLUSTER}"
          for scope in orgs users; do
            url="https://api.github.com/${scope}/${OWNER}/packages/container/${pkg}"
            status=$(curl -s -o /dev/null -w "%{http_code}" -X PATCH \
              -H "Authorization: Bearer $GH_TOKEN" \
              -H "Accept: application/vnd.github+json" \
              "$url" \
              -d '{"visibility":"public"}') || true
            if [ "$status" = "200" ]; then
              echo "${pkg} made public via $url"; exit 0; fi
            if [ "$status" = "404" ]; then continue; fi
            echo "GitHub API returned $status when setting visibility for $pkg"; exit 1
          done
          echo "Package $pkg not found in org/user namespace"; exit 1 